{"version":3,"sources":["assets/images/profile.png","firebase.js","reducer.js","StateProvider.js","components/Login/Login.js","components/PageTemplate/PageTemplate.js","components/Dashboard/Dashboard.js","components/Modals/TemplateModal.js","components/Connections/Connections.js","components/GroupMessages/TimerModal.js","components/GroupMessages/GroupMessages.js","components/DirectMessages/TimerModal.js","components/DirectMessages/DirectMessages.js","components/Emails/TimerModal.js","components/Emails/Emails.js","RouterSetup.js","App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","actionTypes","reducer","state","action","type","user","StateContext","createContext","useStateValue","useContext","StateProvider","initialState","children","Provider","value","useReducer","Login","dispatch","history","useHistory","signInHandler","a","signInWithPopup","result","userData","displayname","displayName","email","avatarUrl","photoURL","axios","post","response","response2","response3","connections","data","i","length","undefined","unseencount","unseen","unseenemail","sort","b","push","pathname","console","log","message","className","src","ProfileImage","alt","class","onClick","PageTemplate","props","location","useLocation","useEffect","addConnectionHandler","unreadconnections","dashBoardLogoHandler","allMessages","emailMessages","localStorage","removeItem","Date","getFullYear","Dashboard","DMSConnections","useState","setConnectionEmail","goToDirectMessages","fetchChat","connectionemail","fetchEmail","goToGroupMessages","goToEmails","map","connection","ind","style","float","display","justifyContent","alignItems","width","height","textShadow","fontWeight","TemplateModal","isShown","setIsShown","ModalTitle","ModalBody","handleClose","Modal","show","onHide","backdrop","keyboard","Header","closeButton","backgroundColor","color","Title","Body","Footer","Button","Connections","modal","setModal","unreadConnections","setUnreadConnections","removeConnectionHandler","acceptConnectionHandler","newUnreadConnections","filter","oldconnection","replace","rejectConnectionHandler","name","onChange","e","target","unreadconnection","TimerModal","setMessage","todaydate","DateFormat","date","setDate","time","setTime","resultModal","setResultModal","sendDelayedMessageHandler","text","senderemail","receiveremail","status","setTimeout","min","GroupMessages","active","setActive","messages","setMessages","connectionEmail","timermodal","setTimerModal","channel","Pusher","cluster","subscribe","bind","newMessages","delayedMessages","unbind_all","unsubscribe","focusLastDiv","sendMessageHandler","objDiv","document","getElementsByClassName","scrollTop","scrollHeight","$","toggle","id","removeClass","addClass","onKeyDown","keyCode","DirectMessages","subject","setSubject","sendDelayedEmailHandler","Emails","setEmailMessages","delayedEmails","fetchEmails","sendEmailHandler","sendDelayEmailHandler","disabled","placeholder","rows","RouterSetup","exact","path","to","defaults","baseURL","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.61fa9b59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile.d39ee9e2.png\";","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCm06l81PepowAEpiXwNjGsyV5BaZOewQk\",\r\n  authDomain: \"encryptchat-e5dda.firebaseapp.com\",\r\n  projectId: \"encryptchat-e5dda\",\r\n  storageBucket: \"encryptchat-e5dda.appspot.com\",\r\n  messagingSenderId: \"112975287816\",\r\n  appId: \"1:112975287816:web:ac19f1c27174776062e3bd\",\r\n  measurementId: \"G-ZVPJSQZ498\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n","export const initialState = {\r\n  user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_USER: \"SET_USER\",\r\n  REMOVE_USER: \"REOMOVE_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case actionTypes.REMOVE_USER:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n\r\nconst StateProvider = ({ reducer, initialState, children }) => {\r\n  return (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StateProvider;\r\n","import React from \"react\";\nimport \"./Login.css\";\nimport ProfileImage from \"../../assets/images/profile.png\";\nimport { auth, provider } from \"../../firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { actionTypes } from \"../../reducer\";\nimport { useStateValue } from \"../../StateProvider\";\n\nconst Login = () => {\n  const [{}, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const signInHandler = async () => {\n    try {\n      const result = await auth.signInWithPopup(provider);\n      const userData = {\n        displayname: result.user.displayName,\n        email: result.user.email,\n        avatarUrl: result.user.photoURL,\n      };\n\n      dispatch({\n        type: actionTypes.SET_USER,\n        user: userData,\n      });\n\n      await axios.post(\"/adduser\", { ...userData });\n\n      var response = await axios.post(\"/fetchconnections\", {\n        email: userData.email,\n      });\n\n      var response2 = await axios.post(\"/fetchunseendmscount\", {\n        email: userData.email,\n      });\n\n      var response3 = await axios.post(\"/fetchunseenemailscount\", {\n        email: userData.email,\n      });\n\n      var connections = response.data.connections;\n      for (let i = 0; i < connections.length; i++) {\n        if (response2.data.unseencount[connections[i].email] == undefined)\n          connections[i].unseen = 0;\n        else\n          connections[i].unseen =\n            response2.data.unseencount[connections[i].email];\n      }\n\n      for (let i = 0; i < connections.length; i++) {\n        if (response3.data.unseencount[connections[i].email] == undefined)\n          connections[i].unseenemail = 0;\n        else\n          connections[i].unseenemail =\n            response3.data.unseencount[connections[i].email];\n      }\n\n      connections.sort((a, b) => (a.unseen < b.unseen ? 1 : -1));\n      connections.sort((a, b) => (a.unseenemail < b.unseenemail ? 1 : -1));\n\n      history.push({\n        pathname: \"/dashboard\",\n        state: {\n          user: userData,\n          connections: response.data.connections,\n        },\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  return (\n    <div className=\"Login\">\n      <div className=\"Login__container\">\n        <div className=\"Login__header\">\n          <img src={ProfileImage} alt=\"Image\" />\n          <br />\n          <h4>SecureEncrypt Chat</h4>\n        </div>\n        <div className=\"Login__footer\">\n          <button class=\"Login__button\" type=\"submit\" onClick={signInHandler}>\n            SIGN IN WITH GOOGLE ACCOUNT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { actionTypes } from \"../../reducer\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport \"./PageTemplate.css\";\r\nimport axios from \"axios\";\r\n\r\nconst PageTemplate = (props) => {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.user) {\r\n      dispatch({\r\n        type: actionTypes.SET_USER,\r\n        user: location.state.user,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: actionTypes.REMOVE_USER,\r\n      });\r\n      history.push(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  const addConnectionHandler = async () => {\r\n    const response = await axios.post(\"/newconnections\", { email: user.email });\r\n    history.push({\r\n      pathname: \"/connections\",\r\n      state: {\r\n        ...location.state,\r\n        unreadconnections: response.data.unreadconnections,\r\n      },\r\n    });\r\n  };\r\n\r\n  const dashBoardLogoHandler = async () => {\r\n    var email = location.state.user.email;\r\n\r\n    var response = await axios.post(\"/fetchconnections\", {\r\n      email: email,\r\n    });\r\n\r\n    var response2 = await axios.post(\"/fetchunseendmscount\", {\r\n      email: email,\r\n    });\r\n\r\n    var response3 = await axios.post(\"/fetchunseenemailscount\", {\r\n      email: email,\r\n    });\r\n\r\n    var connections = response.data.connections;\r\n    for (let i = 0; i < connections.length; i++) {\r\n      if (response2.data.unseencount[connections[i].email] == undefined)\r\n        connections[i].unseen = 0;\r\n      else\r\n        connections[i].unseen =\r\n          response2.data.unseencount[connections[i].email];\r\n    }\r\n\r\n    for (let i = 0; i < connections.length; i++) {\r\n      if (response3.data.unseencount[connections[i].email] == undefined)\r\n        connections[i].unseenemail = 0;\r\n      else\r\n        connections[i].unseenemail =\r\n          response3.data.unseencount[connections[i].email];\r\n    }\r\n\r\n    connections.sort((a, b) => (a.unseen < b.unseen ? 1 : -1));\r\n    connections.sort((a, b) => (a.unseenemail < b.unseenemail ? 1 : -1));\r\n\r\n    history.push({\r\n      pathname: \"/dashboard\",\r\n      state: {\r\n        user: location.state.user,\r\n        connections: connections,\r\n        allMessages: [],\r\n        emailMessages: [],\r\n      },\r\n    });\r\n  };\r\n\r\n  const settingsHandler = () => {};\r\n\r\n  const logoutHandler = () => {\r\n    dispatch({\r\n      type: actionTypes.REMOVE_USER,\r\n    });\r\n    localStorage.removeItem(\"user\");\r\n\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"PageTemplate__container\">\r\n      <div className=\"PageTemplate__navbar\">\r\n        <nav className=\"navbar\">\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" onClick={dashBoardLogoHandler}>\r\n              SecureEncryptChat\r\n            </a>\r\n            <div className=\"PageTemplate__navbar_icons\">\r\n              <i onClick={addConnectionHandler} className=\"fa fa-users\"></i>\r\n              <i onClick={settingsHandler} className=\"fa fa-cog\"></i>\r\n              <i onClick={logoutHandler} className=\"fa fa-sign-out\"></i>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      <div className=\"PageTemplate__body\">{props.children}</div>\r\n      <div className=\"PageTemplate__footer\">\r\n        <b>\r\n          ⓒ 2020 - {new Date().getFullYear()} SECURE ENCRYPT CHAT, Inc. All\r\n          rights reserved.\r\n        </b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTemplate;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nconst Dashboard = () => {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const DMSConnections = location.state.connections;\r\n\r\n  //States\r\n  const [active, setActive] = useState(-1);\r\n  const [connectionEmail, setConnectionEmail] = useState(\"\");\r\n\r\n  //Handlers\r\n  const goToDirectMessages = async () => {\r\n    history.push({\r\n      pathname: \"/directmessages\",\r\n      state: {\r\n        user: user,\r\n        connections: location.state.connections,\r\n        allMessages: [],\r\n      },\r\n    });\r\n  };\r\n\r\n  const fetchChat = async (email, connectionemail) => {\r\n    const response = await axios.post(\"/fetchalldirectmessages\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    await axios.post(\"/directmessagesseen\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    history.push({\r\n      pathname: \"/directmessages\",\r\n      state: {\r\n        user: user,\r\n        connections: location.state.connections,\r\n        allMessages: response.data.allMessages,\r\n      },\r\n    });\r\n  };\r\n\r\n  const fetchEmail = async (email, connectionemail) => {\r\n    const response = await axios.post(\"/fetchallemails\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    await axios.post(\"/emailsseen\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    history.push({\r\n      pathname: \"/emails\",\r\n      state: {\r\n        user: user,\r\n        connections: location.state.connections,\r\n        emailMessages: response.data.emailMessages,\r\n      },\r\n    });\r\n  };\r\n\r\n  const goToGroupMessages = async () => {};\r\n  const goToEmails = async () => {\r\n    history.push({\r\n      pathname: \"/emails\",\r\n      state: {\r\n        user: user,\r\n        connections: location.state.connections,\r\n        emailMessages: [],\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Dashboard__container\">\r\n      <div className=\"Dashboard__directmessages Dashboard__row\">\r\n        <div className=\"row Dashboard__row_header\">\r\n          <div className=\"col-10 text-center\">\r\n            <h3>Direct Messages</h3>\r\n          </div>\r\n          <div className=\"col Dashboard__row_icon\">\r\n            <i\r\n              onClick={goToDirectMessages}\r\n              className=\"fa fa-external-link-square\"\r\n            ></i>\r\n          </div>\r\n        </div>\r\n        {DMSConnections.length > 0 ? (\r\n          DMSConnections.map((connection, ind) => {\r\n            return (\r\n              <div\r\n                className=\"Dashboard__DM_container\"\r\n                onClick={() => {\r\n                  setConnectionEmail(connection.email);\r\n                  fetchChat(user.email, connection.email);\r\n                }}\r\n                key={ind}\r\n              >\r\n                <div className=\"row p-0 mt-2 m-0\">\r\n                  <div className=\"col-2\">\r\n                    <img\r\n                      src={connection.avatarUrl}\r\n                      alt={connection.displayname}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-8\">\r\n                    <h5>{connection.email}</h5>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <p style={{ float: \"right\" }}>{connection.unseen}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div\r\n            className=\"div\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <h4\r\n              style={{\r\n                textShadow: \"1px 1px white\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              No Connections...\r\n            </h4>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"Dashboard__groupmessages Dashboard__row\">\r\n        <div className=\"row Dashboard__row_header\">\r\n          <div className=\"col-10 text-center\">\r\n            <h3>Group Messages</h3>\r\n          </div>\r\n          <div className=\"col Dashboard__row_icon\">\r\n            <i\r\n              onClick={goToGroupMessages}\r\n              className=\"fa fa-external-link-square\"\r\n            ></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Dashboard__directmessages Dashboard__row\">\r\n        <div className=\"row Dashboard__row_header\">\r\n          <div className=\"col-10 text-center\">\r\n            <h3>Emails </h3>\r\n          </div>\r\n          <div className=\"col Dashboard__row_icon\">\r\n            <i onClick={goToEmails} className=\"fa fa-external-link-square\"></i>\r\n          </div>\r\n        </div>\r\n        {DMSConnections.length > 0 ? (\r\n          DMSConnections.map((connection, ind) => {\r\n            return (\r\n              <div\r\n                className=\"Dashboard__DM_container\"\r\n                onClick={() => {\r\n                  setConnectionEmail(connection.email);\r\n                  fetchEmail(user.email, connection.email);\r\n                }}\r\n                key={ind}\r\n              >\r\n                <div className=\"row p-0 mt-2 m-0\">\r\n                  <div className=\"col-2\">\r\n                    <img\r\n                      src={connection.avatarUrl}\r\n                      alt={connection.displayname}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-8\">\r\n                    <h5>{connection.email}</h5>\r\n                  </div>\r\n                  <div className=\"col-2\">\r\n                    <p style={{ float: \"right\" }}>{connection.unseenemail}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div\r\n            className=\"div\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <h4\r\n              style={{\r\n                textShadow: \"1px 1px white\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              No Connections...\r\n            </h4>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst TemplateModal = ({ isShown, setIsShown, ModalTitle, ModalBody }) => {\r\n  const handleClose = () => {\r\n    setIsShown({ isShown: false, ModalTitle, ModalBody });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={isShown}\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <Modal.Header\r\n        closeButton\r\n        style={{\r\n          backgroundColor: \"#5d001e\",\r\n          color: \"white\",\r\n          textShadow: \"2px 2px black\",\r\n        }}\r\n      >\r\n        <Modal.Title>{ModalTitle}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body style={{ fontWeight: \"bold\" }}>{ModalBody}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          style={{\r\n            backgroundColor: \"#5d001e\",\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          onClick={handleClose}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\nexport default TemplateModal;\r\n","import React, { useState } from \"react\";\r\nimport \"./Connections.css\";\r\nimport TemplateModal from \"../Modals/TemplateModal\";\r\nimport axios from \"axios\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst Connections = () => {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [connectionemail, setConnectionEmail] = useState(\"\");\r\n  const [modal, setModal] = useState({\r\n    isShown: false,\r\n    ModalTitle: \"\",\r\n    ModalBody: \"\",\r\n  });\r\n\r\n  const [unreadConnections, setUnreadConnections] = useState(\r\n    location.state.unreadconnections\r\n  );\r\n\r\n  const addConnectionHandler = async () => {\r\n    if (user.email == connectionemail) {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"LOL😂\",\r\n        ModalBody: \"You can't send a connection request to yourself...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const response = await axios.post(\"/addconnection\", {\r\n      email: user.email,\r\n      connectionemail: connectionemail,\r\n    });\r\n    setModal({\r\n      isShown: true,\r\n      ModalTitle: response.data.ModalTitle,\r\n      ModalBody: response.data.ModalBody,\r\n    });\r\n  };\r\n\r\n  const removeConnectionHandler = async () => {\r\n    if (user.email == connectionemail) {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"LOL😂\",\r\n        ModalBody: \"You can't remove a connection to yourself...\",\r\n      });\r\n      return;\r\n    }\r\n    const response = await axios.post(\"/removeconnection\", {\r\n      email: user.email,\r\n      connectionemail: connectionemail,\r\n    });\r\n    setModal({\r\n      isShown: true,\r\n      ModalTitle: response.data.ModalTitle,\r\n      ModalBody: response.data.ModalBody,\r\n    });\r\n  };\r\n\r\n  const acceptConnectionHandler = async (connection) => {\r\n    const response = await axios.post(\"/acceptconnection\", {\r\n      email: user.email,\r\n      connectionemail: connection.email,\r\n    });\r\n    const newUnreadConnections = unreadConnections.filter((oldconnection) => {\r\n      return oldconnection.email != connection.email;\r\n    });\r\n\r\n    history.replace({\r\n      pathname: \"/connections\",\r\n      state: { user, unreadconnections: newUnreadConnections },\r\n    });\r\n\r\n    setUnreadConnections(newUnreadConnections);\r\n  };\r\n\r\n  const rejectConnectionHandler = async (connection) => {\r\n    const response = await axios.post(\"/removeconnection\", {\r\n      email: user.email,\r\n      connectionemail: connection.email,\r\n    });\r\n\r\n    const newUnreadConnections = unreadConnections.filter((oldconnection) => {\r\n      return oldconnection.email != connection.email;\r\n    });\r\n\r\n    history.replace({\r\n      pathname: \"/connections\",\r\n      state: { user, unreadconnections: newUnreadConnections },\r\n    });\r\n\r\n    setUnreadConnections(newUnreadConnections);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Connections\">\r\n      <div className=\"Connections__addconnections\">\r\n        <h1>Alter Connections</h1>\r\n        <div className=\"Connections__addconnections_body\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h3>Enter Email ID</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={connectionemail}\r\n                onChange={(e) => {\r\n                  setConnectionEmail(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn\"\r\n                name=\"addconnection\"\r\n                onClick={addConnectionHandler}\r\n              >\r\n                Send Connection Request\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn\"\r\n                name=\"addconnection\"\r\n                onClick={removeConnectionHandler}\r\n              >\r\n                Remove Connection\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Connections__incomingconnections\">\r\n        <h1>Connections Requests</h1>\r\n        <div className=\"Connections__incomingconnections_body\">\r\n          {unreadConnections.map((unreadconnection, ind) => {\r\n            return (\r\n              <div className=\"Connections__unreadconnections\" key={ind}>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <img\r\n                      src={unreadconnection.avatarUrl}\r\n                      alt={unreadconnection.displayname}\r\n                    />\r\n                    <h5>{unreadconnection.email}</h5>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn w-100 btn-success\"\r\n                      name=\"accept\"\r\n                      onClick={() => {\r\n                        acceptConnectionHandler(unreadconnection);\r\n                      }}\r\n                    >\r\n                      Accept\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn w-100 btn-danger\"\r\n                      name=\"reject\"\r\n                      onClick={() => {\r\n                        rejectConnectionHandler(unreadconnection);\r\n                      }}\r\n                    >\r\n                      Reject\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <TemplateModal\r\n        isShown={modal.isShown}\r\n        setIsShown={setModal}\r\n        ModalTitle={modal.ModalTitle}\r\n        ModalBody={modal.ModalBody}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Connections;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DateFormat from \"dateformat\";\r\nimport axios from \"axios\";\r\nimport TemplateModal from \"../Modals/TemplateModal\";\r\n\r\nconst TimerModal = ({\r\n  isShown,\r\n  setIsShown,\r\n  message,\r\n  setMessage,\r\n  email,\r\n  connectionemail,\r\n}) => {\r\n  const todaydate = DateFormat(new Date(), \"yyyy-mm-dd\");\r\n\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const [resultModal, setResultModal] = useState({\r\n    isShown: false,\r\n    ModalTitle: \"\",\r\n    ModalBody: \"\",\r\n  });\r\n\r\n  const sendDelayedMessageHandler = async () => {\r\n    const response = await axios.post(\"/delaydirectmessage\", {\r\n      text: message,\r\n      senderemail: email,\r\n      receiveremail: connectionemail,\r\n      date: date,\r\n      time: time,\r\n    });\r\n\r\n    setResultModal({\r\n      ...resultModal,\r\n      isShown: true,\r\n      ModalTitle: response.data.ModalTitle,\r\n      ModalBody: response.data.ModalBody,\r\n    });\r\n\r\n    if (response.data.status === \"success\") {\r\n      setMessage(\"\");\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setResultModal({\r\n        ...resultModal,\r\n        isShown: false,\r\n      });\r\n\r\n      handleClose();\r\n    }, 2000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsShown({\r\n      isShown: false,\r\n      message: \"\",\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isShown} onHide={handleClose} backdrop=\"static\">\r\n        <Modal.Header\r\n          closeButton\r\n          style={{\r\n            backgroundColor: \"#5d001e\",\r\n            color: \"white\",\r\n            textShadow: \"2px 2px black\",\r\n          }}\r\n        >\r\n          <Modal.Title>Delayed Message</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ fontWeight: \"bold\" }}>\r\n          <h5 style={{ textShadow: \"1px 1px #5d001e\" }}>Choose Date</h5>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            style={{ backgroundColor: \"#5d001e\", color: \"white\" }}\r\n            class=\"form-control mb-4\"\r\n            value={date}\r\n            min={todaydate}\r\n            onChange={(e) => {\r\n              setDate(e.target.value);\r\n            }}\r\n          />\r\n          <h5 style={{ textShadow: \"1px 1px #5d001e\" }}>Choose Time</h5>\r\n          <input\r\n            style={{ backgroundColor: \"#5d001e\", color: \"white\" }}\r\n            class=\"form-control\"\r\n            type=\"time\"\r\n            name=\"time\"\r\n            value={time}\r\n            onChange={(e) => {\r\n              setTime(e.target.value);\r\n            }}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#5d001e\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onClick={sendDelayedMessageHandler}\r\n          >\r\n            Send Delayed Message\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#5d001e\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <TemplateModal\r\n        isShown={resultModal.isShown}\r\n        setIsShown={setResultModal}\r\n        ModalTitle={resultModal.ModalTitle}\r\n        ModalBody={resultModal.ModalBody}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default TimerModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Pusher from \"pusher-js\";\r\nimport \"./GroupMessages.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport DateFormat from \"dateformat\";\r\nimport TemplateModal from \"../Modals/TemplateModal\";\r\nimport TimerModal from \"./TimerModal\";\r\n\r\nconst GroupMessages = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const connections = location.state.connections;\r\n  const user = location.state.user;\r\n\r\n  //States\r\n  const [active, setActive] = useState(-1);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState(location.state.allMessages);\r\n  const [connectionEmail, setConnectionEmail] = useState(\"\");\r\n  const [modal, setModal] = useState({\r\n    isShown: false,\r\n    ModalTitle: \"\",\r\n    ModalBody: \"\",\r\n  });\r\n  const [timermodal, setTimerModal] = useState({\r\n    isShown: false,\r\n    message: message,\r\n    email: user.email,\r\n    connectionemail: connectionEmail,\r\n  });\r\n\r\n  //Effects\r\n\r\n  useEffect(() => {\r\n    const pusher = new Pusher(\"11a8dd35181269e15a84\", {\r\n      cluster: \"ap2\",\r\n    });\r\n\r\n    const channel = pusher.subscribe(\"directmessages\");\r\n\r\n    channel.bind(\"newmessage\", (data) => {\r\n      if (\r\n        (user.email == data.senderemail || user.email == data.receiveremail) &&\r\n        (connectionEmail == data.senderemail ||\r\n          connectionEmail == data.receiveremail)\r\n      ) {\r\n        setMessages([...messages, { ...data }]);\r\n      }\r\n    });\r\n\r\n    channel.bind(\"delayedmessages\", (data) => {\r\n      const newMessages = data.delayedMessages.filter((message) => {\r\n        return (\r\n          (user.email === message.senderemail ||\r\n            user.email === message.receiveremail) &&\r\n          (connectionEmail === message.senderemail ||\r\n            connectionEmail === message.receiveremail)\r\n        );\r\n      });\r\n      setMessages([...messages, ...newMessages]);\r\n    });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n      focusLastDiv();\r\n    };\r\n  }, [messages]);\r\n\r\n  //Handlers\r\n  const fetchChat = async (email, connectionemail) => {\r\n    const response = await axios.post(\"/fetchalldirectmessages\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    setMessages(response.data.allMessages);\r\n\r\n    await axios.post(\"/directmessagesseen\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n  };\r\n\r\n  const sendMessageHandler = async () => {\r\n    if (connectionEmail == \"\") {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"Choose a Recepient...\",\r\n        ModalBody: \"Please Choose a User to chat with...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (message === \"\") {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"Type a Message...\",\r\n        ModalBody: \"Please type something to send...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const date = DateFormat(new Date(), \"yyyy-mm-dd\");\r\n    const time = DateFormat(new Date(), \"HH:MM\");\r\n\r\n    const data = {\r\n      text: message,\r\n      email: user.email,\r\n      connectionemail: connectionEmail,\r\n      date: date,\r\n      time: time,\r\n    };\r\n    await axios.post(\"/senddirectmessage\", data);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const focusLastDiv = () => {\r\n    var objDiv = document.getElementsByClassName(\"DirectMessages__chatarea\")[0];\r\n    if (objDiv) {\r\n      objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"DirectMessages\">\r\n      <i\r\n        class=\"fa fa-bars\"\r\n        onClick={() => {\r\n          $(\".DirectMessages__sidebar\").toggle(500);\r\n        }}\r\n      ></i>\r\n      <div className=\"DirectMessages__container\">\r\n        <div className=\"DirectMessages__sidebar w-100 \">\r\n          {connections.map((connection, ind) => {\r\n            return (\r\n              <div\r\n                id={\"connection\" + ind}\r\n                className={`DirectMessages__connections `}\r\n                onClick={() => {\r\n                  if (active != -1) {\r\n                    $(\"#connection\" + active).removeClass(\r\n                      \"DirectMessages__connections_active\"\r\n                    );\r\n                  }\r\n                  setActive(ind);\r\n                  $(\"#connection\" + ind).addClass(\r\n                    \"DirectMessages__connections_active\"\r\n                  );\r\n\r\n                  setConnectionEmail(connection.email);\r\n\r\n                  fetchChat(user.email, connection.email);\r\n                }}\r\n                key={ind}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <img\r\n                      src={connection.avatarUrl}\r\n                      alt={connection.displayname}\r\n                    />\r\n                    <h5>{connection.email}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"DirectMessages__chat w-100 \">\r\n          <div className=\"DirectMessages__chatarea\">\r\n            {messages.map((message, ind) => {\r\n              return (\r\n                <div className=\"row\" key={ind}>\r\n                  <div className=\"col\">\r\n                    <p\r\n                      className={`DirectMessages__message ${\r\n                        message.senderemail == user.email\r\n                          ? \"sender\"\r\n                          : \"receiver\"\r\n                      }`}\r\n                    >\r\n                      {message.text}\r\n                    </p>\r\n                    {message.senderemail == user.email ? (\r\n                      <>\r\n                        <p\r\n                          className={`DirectMessages__time ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.time}\r\n                        </p>\r\n                        <p\r\n                          className={`DirectMessages__date ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.date} &nbsp;&nbsp;\r\n                        </p>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <p\r\n                          className={`DirectMessages__date ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.date} &nbsp;&nbsp;\r\n                        </p>\r\n                        <p\r\n                          className={`DirectMessages__time ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.time}\r\n                        </p>{\" \"}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"DirectMessages__inputarea\">\r\n            <input\r\n              class=\"form-control customform\"\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => {\r\n                setMessage(e.target.value);\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode == 13) {\r\n                  sendMessageHandler();\r\n                }\r\n              }}\r\n            />\r\n            <i class=\"fa fa-paper-plane\" onClick={sendMessageHandler}></i>\r\n            <i\r\n              class=\"fa fa-clock-o\"\r\n              onClick={() => {\r\n                if (connectionEmail == \"\") {\r\n                  setModal({\r\n                    isShown: true,\r\n                    ModalTitle: \"Choose a Recepient...\",\r\n                    ModalBody: \"Please Choose a User to chat with...\",\r\n                  });\r\n                  return;\r\n                }\r\n\r\n                if (message === \"\") {\r\n                  setModal({\r\n                    isShown: true,\r\n                    ModalTitle: \"Type a Message...\",\r\n                    ModalBody: \"Please type something to send...\",\r\n                  });\r\n                  return;\r\n                }\r\n\r\n                setTimerModal({\r\n                  isShown: true,\r\n                  message: message,\r\n                  email: user.email,\r\n                  connectionemail: connectionEmail,\r\n                });\r\n              }}\r\n            ></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <TemplateModal\r\n        isShown={modal.isShown}\r\n        setIsShown={setModal}\r\n        ModalTitle={modal.ModalTitle}\r\n        ModalBody={modal.ModalBody}\r\n      />\r\n      <TimerModal\r\n        isShown={timermodal.isShown}\r\n        setIsShown={setTimerModal}\r\n        message={timermodal.message}\r\n        setMessage={setMessage}\r\n        email={timermodal.email}\r\n        connectionemail={timermodal.connectionemail}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupMessages;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DateFormat from \"dateformat\";\r\nimport axios from \"axios\";\r\nimport TemplateModal from \"../Modals/TemplateModal\";\r\n\r\nconst TimerModal = ({\r\n  isShown,\r\n  setIsShown,\r\n  message,\r\n  setMessage,\r\n  email,\r\n  connectionemail,\r\n}) => {\r\n  const todaydate = DateFormat(new Date(), \"yyyy-mm-dd\");\r\n\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const [resultModal, setResultModal] = useState({\r\n    isShown: false,\r\n    ModalTitle: \"\",\r\n    ModalBody: \"\",\r\n  });\r\n\r\n  const sendDelayedMessageHandler = async () => {\r\n    const response = await axios.post(\"/delaydirectmessage\", {\r\n      text: message,\r\n      senderemail: email,\r\n      receiveremail: connectionemail,\r\n      date: date,\r\n      time: time,\r\n    });\r\n\r\n    setResultModal({\r\n      ...resultModal,\r\n      isShown: true,\r\n      ModalTitle: response.data.ModalTitle,\r\n      ModalBody: response.data.ModalBody,\r\n    });\r\n\r\n    if (response.data.status === \"success\") {\r\n      setMessage(\"\");\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setResultModal({\r\n        ...resultModal,\r\n        isShown: false,\r\n      });\r\n\r\n      handleClose();\r\n    }, 2000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsShown({\r\n      isShown: false,\r\n      message: \"\",\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isShown} onHide={handleClose} backdrop=\"static\">\r\n        <Modal.Header\r\n          closeButton\r\n          style={{\r\n            backgroundColor: \"#5d001e\",\r\n            color: \"white\",\r\n            textShadow: \"2px 2px black\",\r\n          }}\r\n        >\r\n          <Modal.Title>Delayed Message</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ fontWeight: \"bold\" }}>\r\n          <h5 style={{ textShadow: \"1px 1px #5d001e\" }}>Choose Date</h5>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            style={{ backgroundColor: \"#5d001e\", color: \"white\" }}\r\n            class=\"form-control mb-4\"\r\n            value={date}\r\n            min={todaydate}\r\n            onChange={(e) => {\r\n              setDate(e.target.value);\r\n            }}\r\n          />\r\n          <h5 style={{ textShadow: \"1px 1px #5d001e\" }}>Choose Time</h5>\r\n          <input\r\n            style={{ backgroundColor: \"#5d001e\", color: \"white\" }}\r\n            class=\"form-control\"\r\n            type=\"time\"\r\n            name=\"time\"\r\n            value={time}\r\n            onChange={(e) => {\r\n              setTime(e.target.value);\r\n            }}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#5d001e\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onClick={sendDelayedMessageHandler}\r\n          >\r\n            Send Delayed Message\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#5d001e\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <TemplateModal\r\n        isShown={resultModal.isShown}\r\n        setIsShown={setResultModal}\r\n        ModalTitle={resultModal.ModalTitle}\r\n        ModalBody={resultModal.ModalBody}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default TimerModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Pusher from \"pusher-js\";\r\nimport \"./DirectMessages.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport DateFormat from \"dateformat\";\r\nimport TemplateModal from \"../Modals/TemplateModal\";\r\nimport TimerModal from \"./TimerModal\";\r\n\r\nconst DirectMessages = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const connections = location.state.connections;\r\n  const user = location.state.user;\r\n\r\n  //States\r\n  const [active, setActive] = useState(-1);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState(location.state.allMessages);\r\n  const [connectionEmail, setConnectionEmail] = useState(\"\");\r\n  const [modal, setModal] = useState({\r\n    isShown: false,\r\n    ModalTitle: \"\",\r\n    ModalBody: \"\",\r\n  });\r\n  const [timermodal, setTimerModal] = useState({\r\n    isShown: false,\r\n    message: message,\r\n    email: user.email,\r\n    connectionemail: connectionEmail,\r\n  });\r\n\r\n  //Effects\r\n  useEffect(() => {\r\n    const pusher = new Pusher(\"11a8dd35181269e15a84\", {\r\n      cluster: \"ap2\",\r\n    });\r\n\r\n    const channel = pusher.subscribe(\"directmessages\");\r\n\r\n    channel.bind(\"newmessage\", (data) => {\r\n      if (\r\n        (user.email == data.senderemail || user.email == data.receiveremail) &&\r\n        (connectionEmail == data.senderemail ||\r\n          connectionEmail == data.receiveremail)\r\n      ) {\r\n        setMessages([...messages, { ...data }]);\r\n      }\r\n    });\r\n\r\n    channel.bind(\"delayedmessages\", (data) => {\r\n      const newMessages = data.delayedMessages.filter((message) => {\r\n        return (\r\n          (user.email === message.senderemail ||\r\n            user.email === message.receiveremail) &&\r\n          (connectionEmail === message.senderemail ||\r\n            connectionEmail === message.receiveremail)\r\n        );\r\n      });\r\n      setMessages([...messages, ...newMessages]);\r\n    });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n      focusLastDiv();\r\n    };\r\n  }, [messages]);\r\n\r\n  //Handlers\r\n  const fetchChat = async (email, connectionemail) => {\r\n    const response = await axios.post(\"/fetchalldirectmessages\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    setMessages(response.data.allMessages);\r\n\r\n    await axios.post(\"/directmessagesseen\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n  };\r\n\r\n  const sendMessageHandler = async () => {\r\n    if (connectionEmail == \"\") {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"Choose a Recepient...\",\r\n        ModalBody: \"Please Choose a User to chat with...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (message === \"\") {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"Type a Message...\",\r\n        ModalBody: \"Please type something to send...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const date = DateFormat(new Date(), \"yyyy-mm-dd\");\r\n    const time = DateFormat(new Date(), \"HH:MM\");\r\n\r\n    const data = {\r\n      text: message,\r\n      email: user.email,\r\n      connectionemail: connectionEmail,\r\n      date: date,\r\n      time: time,\r\n    };\r\n    await axios.post(\"/senddirectmessage\", data);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const focusLastDiv = () => {\r\n    console.log(\"Entered\");\r\n    var objDiv = document.getElementsByClassName(\"DirectMessages__chatarea\")[0];\r\n    if (objDiv) {\r\n      objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"DirectMessages\">\r\n      <i\r\n        class=\"fa fa-bars\"\r\n        onClick={() => {\r\n          $(\".DirectMessages__sidebar\").toggle(500);\r\n        }}\r\n      ></i>\r\n      <div className=\"DirectMessages__container\">\r\n        <div className=\"DirectMessages__sidebar w-100 \">\r\n          {connections.map((connection, ind) => {\r\n            return (\r\n              <div\r\n                id={\"connection\" + ind}\r\n                className={`DirectMessages__connections `}\r\n                onClick={() => {\r\n                  if (active != -1) {\r\n                    $(\"#connection\" + active).removeClass(\r\n                      \"DirectMessages__connections_active\"\r\n                    );\r\n                  }\r\n                  setActive(ind);\r\n                  $(\"#connection\" + ind).addClass(\r\n                    \"DirectMessages__connections_active\"\r\n                  );\r\n\r\n                  setConnectionEmail(connection.email);\r\n\r\n                  fetchChat(user.email, connection.email);\r\n                }}\r\n                key={ind}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <img\r\n                      src={connection.avatarUrl}\r\n                      alt={connection.displayname}\r\n                    />\r\n                    <h5>{connection.email}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"DirectMessages__chat w-100 \">\r\n          <div className=\"DirectMessages__chatarea\">\r\n            {messages.map((message, ind) => {\r\n              return (\r\n                <div className=\"row\" key={ind}>\r\n                  <div className=\"col\">\r\n                    <p\r\n                      className={`DirectMessages__message ${\r\n                        message.senderemail == user.email\r\n                          ? \"sender\"\r\n                          : \"receiver\"\r\n                      }`}\r\n                    >\r\n                      {message.text}\r\n                    </p>\r\n                    {message.senderemail == user.email ? (\r\n                      <>\r\n                        <p\r\n                          className={`DirectMessages__time ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.time}\r\n                        </p>\r\n                        <p\r\n                          className={`DirectMessages__date ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.date} &nbsp;&nbsp;\r\n                        </p>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <p\r\n                          className={`DirectMessages__date ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.date} &nbsp;&nbsp;\r\n                        </p>\r\n                        <p\r\n                          className={`DirectMessages__time ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.time}\r\n                        </p>{\" \"}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"DirectMessages__inputarea\">\r\n            <input\r\n              class=\"form-control customform\"\r\n              type=\"text\"\r\n              name=\"message\"\r\n              value={message}\r\n              onChange={(e) => {\r\n                setMessage(e.target.value);\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode == 13) {\r\n                  sendMessageHandler();\r\n                }\r\n              }}\r\n            />\r\n            <i class=\"fa fa-paper-plane\" onClick={sendMessageHandler}></i>\r\n            <i\r\n              class=\"fa fa-clock-o\"\r\n              onClick={() => {\r\n                if (connectionEmail == \"\") {\r\n                  setModal({\r\n                    isShown: true,\r\n                    ModalTitle: \"Choose a Recepient...\",\r\n                    ModalBody: \"Please Choose a User to chat with...\",\r\n                  });\r\n                  return;\r\n                }\r\n\r\n                if (message === \"\") {\r\n                  setModal({\r\n                    isShown: true,\r\n                    ModalTitle: \"Type a Message...\",\r\n                    ModalBody: \"Please type something to send...\",\r\n                  });\r\n                  return;\r\n                }\r\n\r\n                setTimerModal({\r\n                  isShown: true,\r\n                  message: message,\r\n                  email: user.email,\r\n                  connectionemail: connectionEmail,\r\n                });\r\n              }}\r\n            ></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <TemplateModal\r\n        isShown={modal.isShown}\r\n        setIsShown={setModal}\r\n        ModalTitle={modal.ModalTitle}\r\n        ModalBody={modal.ModalBody}\r\n      />\r\n      <TimerModal\r\n        isShown={timermodal.isShown}\r\n        setIsShown={setTimerModal}\r\n        message={timermodal.message}\r\n        setMessage={setMessage}\r\n        email={timermodal.email}\r\n        connectionemail={timermodal.connectionemail}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectMessages;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DateFormat from \"dateformat\";\r\nimport axios from \"axios\";\r\nimport TemplateModal from \"../Modals/TemplateModal\";\r\n\r\nconst TimerModal = ({\r\n  isShown,\r\n  setIsShown,\r\n  message,\r\n  setMessage,\r\n  subject,\r\n  setSubject,\r\n  email,\r\n  connectionemail,\r\n}) => {\r\n  const todaydate = DateFormat(new Date(), \"yyyy-mm-dd\");\r\n\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const [resultModal, setResultModal] = useState({\r\n    isShown: false,\r\n    ModalTitle: \"\",\r\n    ModalBody: \"\",\r\n  });\r\n\r\n  const sendDelayedEmailHandler = async () => {\r\n    const response = await axios.post(\"/delayemail\", {\r\n      text: message,\r\n      senderemail: email,\r\n      receiveremail: connectionemail,\r\n      subject: subject,\r\n      date: date,\r\n      time: time,\r\n    });\r\n\r\n    setResultModal({\r\n      ...resultModal,\r\n      isShown: true,\r\n      ModalTitle: response.data.ModalTitle,\r\n      ModalBody: response.data.ModalBody,\r\n    });\r\n\r\n    if (response.data.status === \"success\") {\r\n      setMessage(\"\");\r\n      setSubject(\"\");\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setResultModal({\r\n        ...resultModal,\r\n        isShown: false,\r\n      });\r\n\r\n      handleClose();\r\n    }, 2000);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsShown({\r\n      isShown: false,\r\n      message: \"\",\r\n      email: email,\r\n      subject: subject,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    setDate(\"\");\r\n    setTime(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={isShown} onHide={handleClose} backdrop=\"static\">\r\n        <Modal.Header\r\n          closeButton\r\n          style={{\r\n            backgroundColor: \"#5d001e\",\r\n            color: \"white\",\r\n            textShadow: \"2px 2px black\",\r\n          }}\r\n        >\r\n          <Modal.Title>Delayed Email</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ fontWeight: \"bold\" }}>\r\n          <h5 style={{ textShadow: \"1px 1px #5d001e\" }}>Choose Date</h5>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            style={{ backgroundColor: \"#5d001e\", color: \"white\" }}\r\n            class=\"form-control mb-4\"\r\n            value={date}\r\n            min={todaydate}\r\n            onChange={(e) => {\r\n              setDate(e.target.value);\r\n            }}\r\n          />\r\n          <h5 style={{ textShadow: \"1px 1px #5d001e\" }}>Choose Time</h5>\r\n          <input\r\n            style={{ backgroundColor: \"#5d001e\", color: \"white\" }}\r\n            class=\"form-control\"\r\n            type=\"time\"\r\n            name=\"time\"\r\n            value={time}\r\n            onChange={(e) => {\r\n              setTime(e.target.value);\r\n            }}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#5d001e\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onClick={sendDelayedEmailHandler}\r\n          >\r\n            Send Delayed Email\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#5d001e\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <TemplateModal\r\n        isShown={resultModal.isShown}\r\n        setIsShown={setResultModal}\r\n        ModalTitle={resultModal.ModalTitle}\r\n        ModalBody={resultModal.ModalBody}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default TimerModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Pusher from \"pusher-js\";\r\nimport \"./Emails.css\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport TemplateModal from \"../Modals/TemplateModal\";\r\nimport TimerModal from \"./TimerModal\";\r\nimport DateFormat from \"dateformat\";\r\n\r\nconst Emails = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const connections = location.state.connections;\r\n  const user = location.state.user;\r\n\r\n  //States\r\n  const [active, setActive] = useState(-1);\r\n  const [connectionEmail, setConnectionEmail] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [emailMessages, setEmailMessages] = useState(\r\n    location.state.emailMessages\r\n  );\r\n\r\n  const [modal, setModal] = useState({\r\n    isShown: false,\r\n    ModalTitle: \"\",\r\n    ModalBody: \"\",\r\n  });\r\n  const [timermodal, setTimerModal] = useState({\r\n    isShown: false,\r\n    message: message,\r\n    email: user.email,\r\n    connectionemail: connectionEmail,\r\n    subject: subject,\r\n  });\r\n\r\n  //Effects\r\n  useEffect(() => {\r\n    const pusher = new Pusher(\"11a8dd35181269e15a84\", {\r\n      cluster: \"ap2\",\r\n    });\r\n\r\n    const channel = pusher.subscribe(\"emails\");\r\n\r\n    channel.bind(\"newemail\", (data) => {\r\n      if (\r\n        (user.email == data.senderemail || user.email == data.receiveremail) &&\r\n        (connectionEmail == data.senderemail ||\r\n          connectionEmail == data.receiveremail)\r\n      ) {\r\n        setEmailMessages([...emailMessages, { ...data }]);\r\n      }\r\n    });\r\n\r\n    channel.bind(\"delayedemails\", (data) => {\r\n      const newMessages = data.delayedEmails.filter((message) => {\r\n        return (\r\n          (user.email === message.senderemail ||\r\n            user.email === message.receiveremail) &&\r\n          (connectionEmail === message.senderemail ||\r\n            connectionEmail === message.receiveremail)\r\n        );\r\n      });\r\n      setEmailMessages([...emailMessages, ...newMessages]);\r\n    });\r\n\r\n    return () => {\r\n      channel.unbind_all();\r\n      channel.unsubscribe();\r\n      focusLastDiv();\r\n    };\r\n  }, [emailMessages]);\r\n\r\n  //Handlers\r\n  const fetchEmails = async (email, connectionemail) => {\r\n    const response = await axios.post(\"/fetchallemails\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n\r\n    setEmailMessages(response.data.emailMessages);\r\n\r\n    await axios.post(\"/emailsseen\", {\r\n      email: email,\r\n      connectionemail: connectionemail,\r\n    });\r\n  };\r\n\r\n  const sendEmailHandler = async () => {\r\n    if (connectionEmail == \"\") {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"Choose a Recepient...\",\r\n        ModalBody: \"Please Choose a User to chat with...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (message === \"\") {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"Type a Message Body...\",\r\n        ModalBody: \"Please type something to send...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const date = DateFormat(new Date(), \"yyyy-mm-dd\");\r\n    const time = DateFormat(new Date(), \"HH:MM\");\r\n\r\n    const data = {\r\n      text: message,\r\n      email: user.email,\r\n      connectionemail: connectionEmail,\r\n      date: date,\r\n      time: time,\r\n      subject: subject,\r\n    };\r\n    await axios.post(\"/sendemail\", data);\r\n    setMessage(\"\");\r\n    setSubject(\"\");\r\n  };\r\n\r\n  const sendDelayEmailHandler = async () => {\r\n    if (connectionEmail == \"\") {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"Choose a Recepient...\",\r\n        ModalBody: \"Please Choose a User to chat with...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (message === \"\") {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"Type a Message...\",\r\n        ModalBody: \"Please type something to send...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setTimerModal({\r\n      isShown: true,\r\n      message: message,\r\n      email: user.email,\r\n      connectionemail: connectionEmail,\r\n      subject: subject,\r\n    });\r\n  };\r\n\r\n  const focusLastDiv = () => {\r\n    var objDiv = document.getElementsByClassName(\"Emails__chatarea\")[0];\r\n    if (objDiv) {\r\n      objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Emails\">\r\n      <i\r\n        class=\"fa fa-bars\"\r\n        onClick={() => {\r\n          $(\".Emails__sidebar\").toggle(500);\r\n        }}\r\n      ></i>\r\n      <div className=\"Emails__container\">\r\n        <div className=\"Emails__sidebar w-100 \">\r\n          {connections.map((connection, ind) => {\r\n            return (\r\n              <div\r\n                id={\"connection\" + ind}\r\n                className={`DirectMessages__connections `}\r\n                onClick={() => {\r\n                  if (active != -1) {\r\n                    $(\"#connection\" + active).removeClass(\r\n                      \"DirectMessages__connections_active\"\r\n                    );\r\n                  }\r\n                  setActive(ind);\r\n                  $(\"#connection\" + ind).addClass(\r\n                    \"DirectMessages__connections_active\"\r\n                  );\r\n\r\n                  setConnectionEmail(connection.email);\r\n\r\n                  fetchEmails(user.email, connection.email);\r\n                }}\r\n                key={ind}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <img\r\n                      src={connection.avatarUrl}\r\n                      alt={connection.displayname}\r\n                    />\r\n                    <h5>{connection.email}</h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"Emails__chat w-100 \">\r\n          <div className=\"Emails__chatarea\">\r\n            {console.log(emailMessages)}\r\n            {emailMessages.map((message, ind) => {\r\n              return (\r\n                <div className=\"row\" key={ind}>\r\n                  <div className=\"col\">\r\n                    <p\r\n                      className={`DirectMessages__message ${\r\n                        message.senderemail == user.email\r\n                          ? \"sender\"\r\n                          : \"receiver\"\r\n                      }`}\r\n                    >\r\n                      Subject:\r\n                      <br />\r\n                      {message.subject}\r\n                      <br />\r\n                      <br />\r\n                      Body:\r\n                      <br />\r\n                      {message.text}\r\n                    </p>\r\n                    {message.senderemail == user.email ? (\r\n                      <>\r\n                        <p\r\n                          className={`DirectMessages__time ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.time}\r\n                        </p>\r\n                        <p\r\n                          className={`DirectMessages__date ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.date} &nbsp;&nbsp;\r\n                        </p>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <p\r\n                          className={`DirectMessages__date ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.date} &nbsp;&nbsp;\r\n                        </p>\r\n                        <p\r\n                          className={`DirectMessages__time ${\r\n                            message.senderemail == user.email\r\n                              ? \"sender\"\r\n                              : \"receiver\"\r\n                          }`}\r\n                        >\r\n                          {message.time}\r\n                        </p>{\" \"}\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"Emails__inputarea\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  disabled={true}\r\n                  value={connectionEmail}\r\n                  onChange={(e) => {\r\n                    setConnectionEmail(e.target.value);\r\n                  }}\r\n                  className=\"form-control customform\"\r\n                  placeholder=\"Enter Recipient Email\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control customform\"\r\n                  placeholder=\"Enter Subject\"\r\n                  name=\"subject\"\r\n                  value={subject}\r\n                  onChange={(e) => {\r\n                    setSubject(e.target.value);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col\">\r\n                <textarea\r\n                  name=\"message\"\r\n                  value={message}\r\n                  onChange={(e) => {\r\n                    setMessage(e.target.value);\r\n                  }}\r\n                  class=\"form-control customform\"\r\n                  placeholder=\"Enter message to be sent...\"\r\n                  rows=\"3\"\r\n                ></textarea>\r\n                <i class=\"fa fa-paper-plane\" onClick={sendEmailHandler}></i>\r\n                <i class=\"fa fa-clock-o\" onClick={sendDelayEmailHandler}></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <TemplateModal\r\n        isShown={modal.isShown}\r\n        setIsShown={setModal}\r\n        ModalTitle={modal.ModalTitle}\r\n        ModalBody={modal.ModalBody}\r\n      />\r\n      <TimerModal\r\n        isShown={timermodal.isShown}\r\n        setIsShown={setTimerModal}\r\n        message={timermodal.message}\r\n        setMessage={setMessage}\r\n        subject={timermodal.subject}\r\n        setSubject={setSubject}\r\n        email={timermodal.email}\r\n        connectionemail={timermodal.connectionemail}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Emails;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport Login from \"./components/Login/Login\";\r\nimport PageTemplate from \"./components/PageTemplate/PageTemplate\";\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport Connections from \"./components/Connections/Connections\";\r\nimport GroupMessages from \"./components/GroupMessages/GroupMessages\";\r\nimport DirectMessages from \"./components/DirectMessages/DirectMessages\";\r\nimport Emails from \"./components/Emails/Emails\";\r\n\r\nconst RouterSetup = () => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/login\" />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/dashboard\">\r\n            <PageTemplate>\r\n              <Dashboard />\r\n            </PageTemplate>\r\n          </Route>\r\n          <Route exact path=\"/connections\">\r\n            <PageTemplate>\r\n              <Connections />\r\n            </PageTemplate>\r\n          </Route>\r\n          <Route exact path=\"/directmessages\">\r\n            <PageTemplate>\r\n              <DirectMessages />\r\n            </PageTemplate>\r\n          </Route>\r\n          <Route exact path=\"/groupmessages\">\r\n            <PageTemplate>\r\n              <GroupMessages />\r\n            </PageTemplate>\r\n          </Route>\r\n          <Route exact path=\"/emails\">\r\n            <PageTemplate>\r\n              <Emails />\r\n            </PageTemplate>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouterSetup;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport RouterSetup from \"./RouterSetup\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://localhost:3100/api\";\n\nconst App = () => {\n  return (\n    <div class=\"App__container\">\n      <RouterSetup />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport reducer, { initialState } from \"./reducer\";\nimport StateProvider from \"./StateProvider\";\n\nReactDOM.render(\n  <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n  </StateProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}