[{"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\index.js":"1","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\App.js":"2","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\RouterSetup.js":"3","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Login\\Login.js":"4","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\DirectMessages\\DirectMessages.js":"5","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\firebase.js":"6","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\StateProvider.js":"7","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\reducer.js":"8","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\PageTemplate\\PageTemplate.js":"9","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Dashboard\\Dashboard.js":"10","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Connections\\Connections.js":"11","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Modals\\TemplateModal.js":"12","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Emails\\Emails.js":"13","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\DirectMessages\\TimerModal.js":"14","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Emails\\TimerModal.js":"15","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\GroupMessages.js":"16","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\TimerModal.js":"17","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\CreateGroupModal.js":"18","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\DeleteGroupModal.js":"19","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\AddMembersModal.js":"20","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\RemoveMembersModal.js":"21","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\MakeAdminsModal.js":"22","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\RemoveAdminsModal.js":"23","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\GroupInfoModal.js":"24"},{"size":418,"mtime":1610933324659,"results":"25","hashOfConfig":"26"},{"size":322,"mtime":1617456724955,"results":"27","hashOfConfig":"26"},{"size":1678,"mtime":1616907755626,"results":"28","hashOfConfig":"26"},{"size":3201,"mtime":1617014009011,"results":"29","hashOfConfig":"26"},{"size":10391,"mtime":1617518319263,"results":"30","hashOfConfig":"26"},{"size":693,"mtime":1610886576089,"results":"31","hashOfConfig":"26"},{"size":425,"mtime":1610930046244,"results":"32","hashOfConfig":"26"},{"size":488,"mtime":1610968041436,"results":"33","hashOfConfig":"26"},{"size":4123,"mtime":1617013921206,"results":"34","hashOfConfig":"26"},{"size":9914,"mtime":1617518366241,"results":"35","hashOfConfig":"26"},{"size":6288,"mtime":1616903359680,"results":"36","hashOfConfig":"26"},{"size":1094,"mtime":1610962016607,"results":"37","hashOfConfig":"26"},{"size":10891,"mtime":1617518291276,"results":"38","hashOfConfig":"26"},{"size":3570,"mtime":1616902199413,"results":"39","hashOfConfig":"26"},{"size":3654,"mtime":1611326250563,"results":"40","hashOfConfig":"26"},{"size":21509,"mtime":1617517957777,"results":"41","hashOfConfig":"26"},{"size":3591,"mtime":1617023441557,"results":"42","hashOfConfig":"26"},{"size":3562,"mtime":1617518034535,"results":"43","hashOfConfig":"26"},{"size":3327,"mtime":1617518027658,"results":"44","hashOfConfig":"26"},{"size":4258,"mtime":1617518151277,"results":"45","hashOfConfig":"26"},{"size":4374,"mtime":1617518091145,"results":"46","hashOfConfig":"26"},{"size":4291,"mtime":1617518057186,"results":"47","hashOfConfig":"26"},{"size":4320,"mtime":1617518065297,"results":"48","hashOfConfig":"26"},{"size":6302,"mtime":1617515882017,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"5ivkir",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\index.js",[],["104","105"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\App.js",["106","107"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport RouterSetup from \"./RouterSetup\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:4201/api\";\n\nconst App = () => {\n  return (\n    <div class=\"App__container\">\n      <RouterSetup />\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\RouterSetup.js",[],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Login\\Login.js",["108","109"],"import React from \"react\";\nimport \"./Login.css\";\nimport ProfileImage from \"../../assets/images/profile.png\";\nimport { auth, provider } from \"../../firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { actionTypes } from \"../../reducer\";\nimport { useStateValue } from \"../../StateProvider\";\n\nconst Login = () => {\n  const [{}, dispatch] = useStateValue();\n  const history = useHistory();\n\n  const signInHandler = async () => {\n    try {\n      const result = await auth.signInWithPopup(provider);\n      const userData = {\n        displayname: result.user.displayName,\n        email: result.user.email,\n        avatarUrl: result.user.photoURL,\n      };\n\n      dispatch({\n        type: actionTypes.SET_USER,\n        user: userData,\n      });\n\n      await axios.post(\"/adduser\", { ...userData });\n\n      var response = await axios.post(\"/fetchconnections\", {\n        email: userData.email,\n      });\n\n      var response2 = await axios.post(\"/fetchunseendmscount\", {\n        email: userData.email,\n      });\n\n      var response3 = await axios.post(\"/fetchunseenemailscount\", {\n        email: userData.email,\n      });\n\n      var response4 = await axios.post(\"/fetchgroups\", {\n        email: userData.email,\n      });\n\n      var response5 = await axios.post(\"/fetchunseengroupchatscount\", {\n        email: userData.email,\n      });\n      var connections = response.data.connections;\n      var groups = response4.data.groups;\n\n      for (let i = 0; i < connections.length; i++) {\n        if (response2.data.unseencount[connections[i].email] === undefined)\n          connections[i].unseen = 0;\n        else\n          connections[i].unseen =\n            response2.data.unseencount[connections[i].email];\n      }\n\n      for (let i = 0; i < groups.length; i++) {\n        if (response5.data.unseencount[groups[i]._id] === undefined)\n          groups[i].unseen = 0;\n        else groups[i].unseen = response5.data.unseencount[groups[i]._id];\n      }\n\n      for (let i = 0; i < connections.length; i++) {\n        if (response3.data.unseencount[connections[i].email] === undefined)\n          connections[i].unseenemail = 0;\n        else\n          connections[i].unseenemail =\n            response3.data.unseencount[connections[i].email];\n      }\n\n      connections.sort((a, b) => (a.unseen < b.unseen ? 1 : -1));\n      groups.sort((a, b) => (a.unseen < b.unseen ? 1 : -1));\n      connections.sort((a, b) => (a.unseenemail < b.unseenemail ? 1 : -1));\n\n      history.push({\n        pathname: \"/dashboard\",\n        state: {\n          user: userData,\n          connections: connections,\n          groups: groups,\n        },\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  return (\n    <div className=\"Login\">\n      <div className=\"Login__container\">\n        <div className=\"Login__header\">\n          <img src={ProfileImage} alt=\"Image\" />\n          <br />\n          <h4>SecureEncrypt Chat</h4>\n        </div>\n        <div className=\"Login__footer\">\n          <button class=\"Login__button\" type=\"submit\" onClick={signInHandler}>\n            SIGN IN WITH GOOGLE ACCOUNT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\DirectMessages\\DirectMessages.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\firebase.js",[],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\StateProvider.js",[],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\reducer.js",[],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\PageTemplate\\PageTemplate.js",["126","127"],"import React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { actionTypes } from \"../../reducer\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport \"./PageTemplate.css\";\r\nimport axios from \"axios\";\r\n\r\nconst PageTemplate = (props) => {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.user) {\r\n      dispatch({\r\n        type: actionTypes.SET_USER,\r\n        user: location.state.user,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: actionTypes.REMOVE_USER,\r\n      });\r\n      history.push(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  const addConnectionHandler = async () => {\r\n    const response = await axios.post(\"/newconnections\", { email: user.email });\r\n    history.push({\r\n      pathname: \"/connections\",\r\n      state: {\r\n        ...location.state,\r\n        unreadconnections: response.data.unreadconnections,\r\n      },\r\n    });\r\n  };\r\n\r\n  const dashBoardLogoHandler = async () => {\r\n    var email = location.state.user.email;\r\n\r\n    var response = await axios.post(\"/fetchconnections\", {\r\n      email: email,\r\n    });\r\n\r\n    var response2 = await axios.post(\"/fetchunseendmscount\", {\r\n      email: email,\r\n    });\r\n\r\n    var response3 = await axios.post(\"/fetchunseenemailscount\", {\r\n      email: email,\r\n    });\r\n\r\n    var response4 = await axios.post(\"/fetchgroups\", {\r\n      email: email,\r\n    });\r\n\r\n    var response5 = await axios.post(\"/fetchunseengroupchatscount\", {\r\n      email: email,\r\n    });\r\n    var connections = response.data.connections;\r\n    var groups = response4.data.groups;\r\n\r\n    for (let i = 0; i < connections.length; i++) {\r\n      if (response2.data.unseencount[connections[i].email] === undefined)\r\n        connections[i].unseen = 0;\r\n      else\r\n        connections[i].unseen =\r\n          response2.data.unseencount[connections[i].email];\r\n    }\r\n\r\n    for (let i = 0; i < groups.length; i++) {\r\n      if (response5.data.unseencount[groups[i]._id] === undefined)\r\n        groups[i].unseen = 0;\r\n      else groups[i].unseen = response5.data.unseencount[groups[i]._id];\r\n    }\r\n\r\n    for (let i = 0; i < connections.length; i++) {\r\n      if (response3.data.unseencount[connections[i].email] === undefined)\r\n        connections[i].unseenemail = 0;\r\n      else\r\n        connections[i].unseenemail =\r\n          response3.data.unseencount[connections[i].email];\r\n    }\r\n\r\n    connections.sort((a, b) => (a.unseen < b.unseen ? 1 : -1));\r\n    groups.sort((a, b) => (a.unseen < b.unseen ? 1 : -1));\r\n    connections.sort((a, b) => (a.unseenemail < b.unseenemail ? 1 : -1));\r\n\r\n    history.push({\r\n      pathname: \"/dashboard\",\r\n      state: {\r\n        user: location.state.user,\r\n        connections: connections,\r\n        groups: groups,\r\n        allMessages: [],\r\n        emailMessages: [],\r\n      },\r\n    });\r\n  };\r\n\r\n  const settingsHandler = () => {};\r\n\r\n  const logoutHandler = () => {\r\n    dispatch({\r\n      type: actionTypes.REMOVE_USER,\r\n    });\r\n    localStorage.removeItem(\"user\");\r\n\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"PageTemplate__container\">\r\n      <div className=\"PageTemplate__navbar\">\r\n        <nav className=\"navbar\">\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" onClick={dashBoardLogoHandler}>\r\n              SecureEncryptChat\r\n            </a>\r\n            <div className=\"PageTemplate__navbar_icons\">\r\n              <i onClick={addConnectionHandler} className=\"fa fa-users\"></i>\r\n              <i onClick={settingsHandler} className=\"fa fa-cog\"></i>\r\n              <i onClick={logoutHandler} className=\"fa fa-sign-out\"></i>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      <div className=\"PageTemplate__body\">{props.children}</div>\r\n      <div className=\"PageTemplate__footer\">\r\n        <b>\r\n          ⓒ 2020 - {new Date().getFullYear()} SECURE ENCRYPT CHAT, Inc. All\r\n          rights reserved.\r\n        </b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTemplate;\r\n","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Dashboard\\Dashboard.js",["128","129","130","131","132"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Connections\\Connections.js",["133","134","135","136","137","138","139"],"import React, { useState } from \"react\";\r\nimport \"./Connections.css\";\r\nimport TemplateModal from \"../Modals/TemplateModal\";\r\nimport axios from \"axios\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst Connections = () => {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [connectionemail, setConnectionEmail] = useState(\"\");\r\n  const [modal, setModal] = useState({\r\n    isShown: false,\r\n    ModalTitle: \"\",\r\n    ModalBody: \"\",\r\n  });\r\n\r\n  const [unreadConnections, setUnreadConnections] = useState(\r\n    location.state.unreadconnections\r\n  );\r\n\r\n  const addConnectionHandler = async () => {\r\n    if (user.email == connectionemail) {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"LOL😂\",\r\n        ModalBody: \"You can't send a connection request to yourself...\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    const response = await axios.post(\"/addconnection\", {\r\n      email: user.email,\r\n      connectionemail: connectionemail,\r\n    });\r\n    setModal({\r\n      isShown: true,\r\n      ModalTitle: response.data.ModalTitle,\r\n      ModalBody: response.data.ModalBody,\r\n    });\r\n  };\r\n\r\n  const removeConnectionHandler = async () => {\r\n    if (user.email == connectionemail) {\r\n      setModal({\r\n        isShown: true,\r\n        ModalTitle: \"LOL😂\",\r\n        ModalBody: \"You can't remove a connection to yourself...\",\r\n      });\r\n      return;\r\n    }\r\n    const response = await axios.post(\"/removeconnection\", {\r\n      email: user.email,\r\n      connectionemail: connectionemail,\r\n    });\r\n    setModal({\r\n      isShown: true,\r\n      ModalTitle: response.data.ModalTitle,\r\n      ModalBody: response.data.ModalBody,\r\n    });\r\n  };\r\n\r\n  const acceptConnectionHandler = async (connection) => {\r\n    const response = await axios.post(\"/acceptconnection\", {\r\n      email: user.email,\r\n      connectionemail: connection.email,\r\n    });\r\n    const newUnreadConnections = unreadConnections.filter((oldconnection) => {\r\n      return oldconnection.email != connection.email;\r\n    });\r\n\r\n    history.replace({\r\n      pathname: \"/connections\",\r\n      state: { user, unreadconnections: newUnreadConnections },\r\n    });\r\n\r\n    setUnreadConnections(newUnreadConnections);\r\n  };\r\n\r\n  const rejectConnectionHandler = async (connection) => {\r\n    const response = await axios.post(\"/removeconnection\", {\r\n      email: user.email,\r\n      connectionemail: connection.email,\r\n    });\r\n\r\n    const newUnreadConnections = unreadConnections.filter((oldconnection) => {\r\n      return oldconnection.email != connection.email;\r\n    });\r\n\r\n    history.replace({\r\n      pathname: \"/connections\",\r\n      state: { user, unreadconnections: newUnreadConnections },\r\n    });\r\n\r\n    setUnreadConnections(newUnreadConnections);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Connections\">\r\n      <div className=\"Connections__addconnections\">\r\n        <h1>Alter Connections</h1>\r\n        <div className=\"Connections__addconnections_body\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h3>Enter Email ID</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={connectionemail}\r\n                onChange={(e) => {\r\n                  setConnectionEmail(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn\"\r\n                name=\"addconnection\"\r\n                onClick={addConnectionHandler}\r\n              >\r\n                Send Connection Request\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn\"\r\n                name=\"addconnection\"\r\n                onClick={removeConnectionHandler}\r\n              >\r\n                Remove Connection\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Connections__incomingconnections\">\r\n        <h1>Connections Requests</h1>\r\n        <div className=\"Connections__incomingconnections_body\">\r\n          {unreadConnections.map((unreadconnection, ind) => {\r\n            return (\r\n              <div className=\"Connections__unreadconnections\" key={ind}>\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n                    <img\r\n                      src={unreadconnection.avatarUrl}\r\n                      alt={unreadconnection.displayname}\r\n                    />\r\n                    <h5>{unreadconnection.email}</h5>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn w-100 btn-success\"\r\n                      name=\"accept\"\r\n                      onClick={() => {\r\n                        acceptConnectionHandler(unreadconnection);\r\n                      }}\r\n                    >\r\n                      Accept\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn w-100 btn-danger\"\r\n                      name=\"reject\"\r\n                      onClick={() => {\r\n                        rejectConnectionHandler(unreadconnection);\r\n                      }}\r\n                    >\r\n                      Reject\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <TemplateModal\r\n        isShown={modal.isShown}\r\n        setIsShown={setModal}\r\n        ModalTitle={modal.ModalTitle}\r\n        ModalBody={modal.ModalBody}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Connections;\r\n","C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Modals\\TemplateModal.js",[],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Emails\\Emails.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\DirectMessages\\TimerModal.js",[],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\Emails\\TimerModal.js",[],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\GroupMessages.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\TimerModal.js",[],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\CreateGroupModal.js",["170"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\DeleteGroupModal.js",["171"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\AddMembersModal.js",["172","173"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\RemoveMembersModal.js",["174","175"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\MakeAdminsModal.js",["176","177"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\RemoveAdminsModal.js",["178","179"],"C:\\Users\\shara\\Desktop\\Data\\React\\practice\\src\\components\\GroupMessages\\Modals\\GroupInfoModal.js",["180","181","182"],"import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst GroupInfoModal = ({ isShown, setIsShown, group }) => {\r\n  //States\r\n  const [showAdmin, setShowAdmin] = useState(false);\r\n  const [showMembers, setShowMembers] = useState(false);\r\n  const [admins, setAdmins] = useState([]);\r\n\r\n  //Handlers\r\n  const chooseRoleHandler = (option) => {\r\n    if (option === \"admins\") {\r\n      if (JSON.stringify(group) !== JSON.stringify({})) {\r\n        var completeAdmins = group.members.filter((member) => {\r\n          return group.admin.some((row) => row.email === member.email);\r\n        });\r\n        setAdmins(completeAdmins);\r\n      }\r\n      setShowAdmin(true);\r\n      setShowMembers(false);\r\n    } else if (option === \"members\") {\r\n      setShowAdmin(false);\r\n      setShowMembers(true);\r\n    } else {\r\n      setShowAdmin(false);\r\n      setShowMembers(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsShown({\r\n      ...isShown,\r\n      isShown: false,\r\n    });\r\n    setShowAdmin(false);\r\n    setShowMembers(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={isShown}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header\r\n          closeButton\r\n          style={{\r\n            backgroundColor: \"#5d001e\",\r\n            color: \"white\",\r\n            textShadow: \"2px 2px black\",\r\n          }}\r\n        >\r\n          <Modal.Title>{group.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ fontWeight: \"bold\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <img\r\n                src={group.pictureUrl}\r\n                style={{\r\n                  width: \"30vh\",\r\n                  height: \"30vh\",\r\n                  borderRadius: \"100%\",\r\n                  display: \"block\",\r\n                  marginLeft: \"auto\",\r\n                  marginRight: \"auto\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row m-4\">\r\n            <div className=\"col\">\r\n              <div className=\"input-group\">\r\n                <div\r\n                  className=\"input-group-prepend\"\r\n                  style={{\r\n                    borderRight: \"1px solid white\",\r\n                  }}\r\n                >\r\n                  <span\r\n                    className=\"input-group-text\"\r\n                    style={{\r\n                      backgroundColor: \"#5d001e\",\r\n                      color: \"white\",\r\n                    }}\r\n                  >\r\n                    Owner\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control GroupMessages__info_owner\"\r\n                  value={group.owner}\r\n                  disabled={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row m-4\">\r\n            <div className=\"col\">\r\n              <select\r\n                class=\"form-control GroupMessages__info_select\"\r\n                style={{ backgroundColor: \"#5d001e\", color: \"white\" }}\r\n                onChange={(e) => {\r\n                  chooseRoleHandler(e.target.value);\r\n                }}\r\n              >\r\n                <option value=\"default\" selected>\r\n                  Choose a role to view members\r\n                </option>\r\n                <option value=\"admins\">Admins</option>\r\n                <option value=\"members\">Members</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {showAdmin ? (\r\n            <div className=\"row mt-4 GroupInfoModal__container\">\r\n              <div className=\"col\">\r\n                {admins.map((admin) => {\r\n                  return (\r\n                    <div className=\"container\">\r\n                      <div className=\"row mt-2\">\r\n                        <div className=\"col-3\">\r\n                          <img src={admin.avatarUrl} />\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col\">\r\n                              <h4>{admin.displayname}</h4>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col\">\r\n                              <h6>{admin.email}</h6>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {showMembers ? (\r\n            <div className=\"row mt-4 GroupInfoModal__container\">\r\n              <div className=\"col\">\r\n                {group.members.map((member) => {\r\n                  return (\r\n                    <div className=\"container\">\r\n                      <div className=\"row mt-2\">\r\n                        <div className=\"col-3\">\r\n                          <img src={member.avatarUrl} />\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col\">\r\n                              <h4>{member.displayname}</h4>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col\">\r\n                              <h6>{member.email}</h6>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"#5d001e\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onClick={handleClose}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default GroupInfoModal;\r\n",{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"191","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"193","line":11,"column":10,"nodeType":"194","messageId":"195","endLine":11,"endColumn":12},{"ruleId":"196","severity":1,"message":"197","line":95,"column":11,"nodeType":"198","endLine":95,"endColumn":49},{"ruleId":"199","severity":1,"message":"200","line":40,"column":16,"nodeType":"201","messageId":"195","endLine":40,"endColumn":18},{"ruleId":"202","severity":1,"message":"203","line":43,"column":6,"nodeType":"204","endLine":43,"endColumn":8,"suggestions":"205"},{"ruleId":"199","severity":1,"message":"206","line":62,"column":21,"nodeType":"201","messageId":"195","endLine":62,"endColumn":23},{"ruleId":"199","severity":1,"message":"206","line":62,"column":55,"nodeType":"201","messageId":"195","endLine":62,"endColumn":57},{"ruleId":"199","severity":1,"message":"206","line":63,"column":26,"nodeType":"201","messageId":"195","endLine":63,"endColumn":28},{"ruleId":"199","severity":1,"message":"206","line":64,"column":27,"nodeType":"201","messageId":"195","endLine":64,"endColumn":29},{"ruleId":"199","severity":1,"message":"206","line":112,"column":25,"nodeType":"201","messageId":"195","endLine":112,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":167,"column":30,"nodeType":"201","messageId":"195","endLine":167,"endColumn":32},{"ruleId":"199","severity":1,"message":"206","line":204,"column":45,"nodeType":"201","messageId":"195","endLine":204,"endColumn":47},{"ruleId":"199","severity":1,"message":"206","line":211,"column":42,"nodeType":"201","messageId":"195","endLine":211,"endColumn":44},{"ruleId":"199","severity":1,"message":"206","line":215,"column":49,"nodeType":"201","messageId":"195","endLine":215,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":224,"column":49,"nodeType":"201","messageId":"195","endLine":224,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":236,"column":49,"nodeType":"201","messageId":"195","endLine":236,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":245,"column":49,"nodeType":"201","messageId":"195","endLine":245,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":269,"column":31,"nodeType":"201","messageId":"195","endLine":269,"endColumn":33},{"ruleId":"199","severity":1,"message":"206","line":278,"column":37,"nodeType":"201","messageId":"195","endLine":278,"endColumn":39},{"ruleId":"202","severity":1,"message":"207","line":25,"column":6,"nodeType":"204","endLine":25,"endColumn":8,"suggestions":"208"},{"ruleId":"209","severity":1,"message":"210","line":117,"column":13,"nodeType":"198","endLine":117,"endColumn":72},{"ruleId":"187","severity":1,"message":"211","line":9,"column":20,"nodeType":"189","messageId":"190","endLine":9,"endColumn":28},{"ruleId":"187","severity":1,"message":"212","line":17,"column":22,"nodeType":"189","messageId":"190","endLine":17,"endColumn":35},{"ruleId":"213","severity":1,"message":"214","line":89,"column":9,"nodeType":"189","messageId":"215","endLine":89,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":90,"column":16,"nodeType":"201","messageId":"195","endLine":90,"endColumn":18},{"ruleId":"199","severity":1,"message":"200","line":123,"column":16,"nodeType":"201","messageId":"195","endLine":123,"endColumn":18},{"ruleId":"187","severity":1,"message":"211","line":9,"column":20,"nodeType":"189","messageId":"190","endLine":9,"endColumn":28},{"ruleId":"199","severity":1,"message":"206","line":25,"column":20,"nodeType":"201","messageId":"195","endLine":25,"endColumn":22},{"ruleId":"199","severity":1,"message":"206","line":46,"column":20,"nodeType":"201","messageId":"195","endLine":46,"endColumn":22},{"ruleId":"187","severity":1,"message":"216","line":66,"column":11,"nodeType":"189","messageId":"190","endLine":66,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":71,"column":34,"nodeType":"201","messageId":"195","endLine":71,"endColumn":36},{"ruleId":"187","severity":1,"message":"216","line":83,"column":11,"nodeType":"189","messageId":"190","endLine":83,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":89,"column":34,"nodeType":"201","messageId":"195","endLine":89,"endColumn":36},{"ruleId":"187","severity":1,"message":"217","line":13,"column":9,"nodeType":"189","messageId":"190","endLine":13,"endColumn":16},{"ruleId":"199","severity":1,"message":"206","line":53,"column":21,"nodeType":"201","messageId":"195","endLine":53,"endColumn":23},{"ruleId":"199","severity":1,"message":"206","line":53,"column":55,"nodeType":"201","messageId":"195","endLine":53,"endColumn":57},{"ruleId":"199","severity":1,"message":"206","line":54,"column":26,"nodeType":"201","messageId":"195","endLine":54,"endColumn":28},{"ruleId":"199","severity":1,"message":"206","line":55,"column":27,"nodeType":"201","messageId":"195","endLine":55,"endColumn":29},{"ruleId":"199","severity":1,"message":"206","line":95,"column":25,"nodeType":"201","messageId":"195","endLine":95,"endColumn":27},{"ruleId":"199","severity":1,"message":"206","line":130,"column":25,"nodeType":"201","messageId":"195","endLine":130,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":180,"column":30,"nodeType":"201","messageId":"195","endLine":180,"endColumn":32},{"ruleId":"199","severity":1,"message":"206","line":218,"column":45,"nodeType":"201","messageId":"195","endLine":218,"endColumn":47},{"ruleId":"199","severity":1,"message":"206","line":232,"column":42,"nodeType":"201","messageId":"195","endLine":232,"endColumn":44},{"ruleId":"199","severity":1,"message":"206","line":236,"column":49,"nodeType":"201","messageId":"195","endLine":236,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":245,"column":49,"nodeType":"201","messageId":"195","endLine":245,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":257,"column":49,"nodeType":"201","messageId":"195","endLine":257,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":266,"column":49,"nodeType":"201","messageId":"195","endLine":266,"endColumn":51},{"ruleId":"187","severity":1,"message":"218","line":26,"column":23,"nodeType":"189","messageId":"190","endLine":26,"endColumn":37},{"ruleId":"199","severity":1,"message":"200","line":68,"column":16,"nodeType":"201","messageId":"195","endLine":68,"endColumn":18},{"ruleId":"202","severity":1,"message":"219","line":72,"column":6,"nodeType":"204","endLine":72,"endColumn":8,"suggestions":"220"},{"ruleId":"213","severity":1,"message":"221","line":165,"column":15,"nodeType":"189","messageId":"215","endLine":165,"endColumn":24},{"ruleId":"199","severity":1,"message":"206","line":216,"column":27,"nodeType":"201","messageId":"195","endLine":216,"endColumn":29},{"ruleId":"199","severity":1,"message":"206","line":216,"column":59,"nodeType":"201","messageId":"195","endLine":216,"endColumn":61},{"ruleId":"199","severity":1,"message":"200","line":342,"column":32,"nodeType":"201","messageId":"195","endLine":342,"endColumn":34},{"ruleId":"199","severity":1,"message":"206","line":491,"column":45,"nodeType":"201","messageId":"195","endLine":491,"endColumn":47},{"ruleId":"199","severity":1,"message":"206","line":498,"column":42,"nodeType":"201","messageId":"195","endLine":498,"endColumn":44},{"ruleId":"199","severity":1,"message":"206","line":502,"column":49,"nodeType":"201","messageId":"195","endLine":502,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":511,"column":49,"nodeType":"201","messageId":"195","endLine":511,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":520,"column":49,"nodeType":"201","messageId":"195","endLine":520,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":532,"column":49,"nodeType":"201","messageId":"195","endLine":532,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":541,"column":49,"nodeType":"201","messageId":"195","endLine":541,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":550,"column":49,"nodeType":"201","messageId":"195","endLine":550,"endColumn":51},{"ruleId":"199","severity":1,"message":"206","line":574,"column":31,"nodeType":"201","messageId":"195","endLine":574,"endColumn":33},{"ruleId":"187","severity":1,"message":"216","line":33,"column":11,"nodeType":"189","messageId":"190","endLine":33,"endColumn":19},{"ruleId":"187","severity":1,"message":"216","line":18,"column":13,"nodeType":"189","messageId":"190","endLine":18,"endColumn":21},{"ruleId":"202","severity":1,"message":"222","line":29,"column":6,"nodeType":"204","endLine":29,"endColumn":8,"suggestions":"223"},{"ruleId":"187","severity":1,"message":"216","line":45,"column":13,"nodeType":"189","messageId":"190","endLine":45,"endColumn":21},{"ruleId":"202","severity":1,"message":"222","line":35,"column":6,"nodeType":"204","endLine":35,"endColumn":8,"suggestions":"224"},{"ruleId":"187","severity":1,"message":"216","line":51,"column":13,"nodeType":"189","messageId":"190","endLine":51,"endColumn":21},{"ruleId":"202","severity":1,"message":"222","line":29,"column":6,"nodeType":"204","endLine":29,"endColumn":8,"suggestions":"225"},{"ruleId":"187","severity":1,"message":"216","line":45,"column":13,"nodeType":"189","messageId":"190","endLine":45,"endColumn":21},{"ruleId":"202","severity":1,"message":"222","line":35,"column":6,"nodeType":"204","endLine":35,"endColumn":8,"suggestions":"226"},{"ruleId":"187","severity":1,"message":"216","line":51,"column":13,"nodeType":"189","messageId":"190","endLine":51,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":61,"column":15,"nodeType":"198","endLine":71,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":128,"column":27,"nodeType":"198","endLine":128,"endColumn":56},{"ruleId":"227","severity":1,"message":"228","line":157,"column":27,"nodeType":"198","endLine":157,"endColumn":57},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.","ArrayExpression",["231"],"Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'location.state'. Either include them or remove the dependency array.",["232"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'dispatch' is assigned a value but never used.","'setGroupChats' is assigned a value but never used.","no-redeclare","'connectionemail' is already defined.","redeclared","'response' is assigned a value but never used.","'history' is assigned a value but never used.","'setConnections' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'active' and 'location.state.activeGroup'. Either include them or remove the dependency array.",["233"],"'newGroups' is already defined.","React Hook useEffect has a missing dependency: 'connections'. Either include it or remove the dependency array. If 'setAllMembers' needs the current value of 'connections', you can also switch to useReducer instead of useState and read 'connections' in the reducer.",["234"],["235"],["236"],["237"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"244","fix":"246"},{"desc":"244","fix":"247"},{"desc":"244","fix":"248"},"Update the dependencies array to be: [active]",{"range":"249","text":"250"},"Update the dependencies array to be: [dispatch, history, location.state]",{"range":"251","text":"252"},"Update the dependencies array to be: [active, location.state.activeGroup]",{"range":"253","text":"254"},"Update the dependencies array to be: [connections]",{"range":"255","text":"256"},{"range":"257","text":"256"},{"range":"258","text":"256"},{"range":"259","text":"256"},[1414,1416],"[active]",[717,719],"[dispatch, history, location.state]",[2432,2434],"[active, location.state.activeGroup]",[868,870],"[connections]",[888,890],[868,870],[887,889]]